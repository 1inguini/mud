fun length : [a] -> Int = {
  [] -> 0
  es -> 1 + length (tail es)
}

fun map : [a] -> (a->a) -> [a] = {
  [] f -> []
  es f -> [f (head es)] + map (tail es) f
}

fun reverse : [a] -> [a] = {
  [] -> []
  es -> (reverse (tail es)) + [head es]
}

fun select : [a] -> (a -> Bool) -> [a] = {
  [] f -> []
  es f -> if (es.head.f) then ([es.head] + select (es.tail) f) else (select (es.tail) f)
}

fun qsort : [a] -> [a] = {
    [] -> []
    es  -> {
      lesser = es.tail.select (x -> x < es.head : a -> Bool).qsort
      equal = es.select (x -> x == es.head : a -> Bool)
      greater = es.tail.select (x -> x > es.head : a -> Bool).qsort
      lesser + equal + greater
    }
}

[4,1,5,3,2].qsort.reverse